/* USER CODE BEGIN Includes */
#include "ILI9341_STM32_Driver.h"
#include "ILI9341_GFX.h"
#include "xpt2046.h"
#include <stdint.h>
#include <string.h>
#include <stdio.h>
/* USER CODE END Includes */




/* Private function prototypes -----------------------------------------------*/
void birincibolge();
void ikincibolge();
void ucuncubolge();
void dorduncubolge();




/* USER CODE BEGIN PFP */
uint16_t touchX, touchY;
int score=0;
/* USER CODE END PFP */




/* USER CODE BEGIN 0 */
void  birincibolge(){
	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);
   	// Hollow Circle (Centre X, Centre Y, Radius, Color)
   	ILI9341_DrawHollowCircle(80, 120, 40, BLUE);  // SOL UST
 	// Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 100, 280,140, YELLOW); // SAG UST

   	HAL_Delay(100);

  	while(1){
  		touchX = getX();
  		touchY = getY();

 		if(touchX<160 && touchX != 0){
			ILI9341_DrawText("Dogru", FONT4, 130, 120, BLACK, WHITE);
 			HAL_Delay(150);
			score+=1;
			break;
		}
		if(touchX>160 && touchX != 0){
		    ILI9341_DrawText("Yanlis", FONT4, 130, 120, BLACK, WHITE);
		    HAL_Delay(150);
	   	    break;
		}

  	}

  	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawHLine(0, 120, 320, WHITE);
  	// Vertical Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);

  	// Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawFilledCircle(80, 60, 40, BLUE);  // SOL UST

  	// Hollow Rectangle (Start X, Start Y, End X, End Y)
  	ILI9341_DrawFilledRectangleCoord(200, 40, 280, 80, YELLOW); // SAG UST

  		  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawHollowCircle(80,180, 40, NAVY);  // SOL ALT
  		  // Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 160, 280, 200, ORANGE); // SAG ALT
}

void  ikincibolge(){
	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);
   	// Hollow Circle (Centre X, Centre Y, Radius, Color)
   	ILI9341_DrawHollowCircle(80, 120, 40, BLUE);  // SOL UST
 	// Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 100, 280,140, YELLOW); // SAG UST

   	HAL_Delay(100);

  	while(1){
  		touchX = getX();
  		touchY = getY();

 		if(touchX>160 && touchX != 0){
			ILI9341_DrawText("Dogru", FONT4, 130, 120, BLACK, WHITE);
 			HAL_Delay(150);
			score+=1;
			break;
		}
		if(touchX<160 && touchX != 0){
		    ILI9341_DrawText("Yanlis", FONT4, 130, 120, BLACK, WHITE);
		    HAL_Delay(150);
	   	    break;
		}

  	}

  	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawHLine(0, 120, 320, WHITE);
  	// Vertical Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);

  	// Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawFilledCircle(80, 60, 40, BLUE);  // SOL UST

  	// Hollow Rectangle (Start X, Start Y, End X, End Y)
  	ILI9341_DrawFilledRectangleCoord(200, 40, 280, 80, YELLOW); // SAG UST

  		  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawHollowCircle(80,180, 40, NAVY);  // SOL ALT
  		  // Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 160, 280, 200, ORANGE); // SAG ALT
}


void  ucuncubolge(){
	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);
   	// Hollow Circle (Centre X, Centre Y, Radius, Color)
   	ILI9341_DrawFilledCircle(80, 120, 40, BLUE);  // SOL UST
 	// Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawFilledRectangleCoord(200, 100, 280,140, YELLOW); // SAG UST

   	HAL_Delay(100);

  	while(1){
  		touchX = getX();
  		touchY = getY();

 		if(touchX<160 && touchX != 0){
			ILI9341_DrawText("Dogru", FONT4, 130, 120, BLACK, WHITE);
 			HAL_Delay(150);
			score+=1;
			break;
		}
		if(touchX>160 && touchX != 0){
		    ILI9341_DrawText("Yanlis", FONT4, 130, 120, BLACK, WHITE);
		    HAL_Delay(150);
	   	    break;
		}

  	}

  	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawHLine(0, 120, 320, WHITE);
  	// Vertical Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);

  	// Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawFilledCircle(80, 60, 40, BLUE);  // SOL UST

  	// Hollow Rectangle (Start X, Start Y, End X, End Y)
  	ILI9341_DrawFilledRectangleCoord(200, 40, 280, 80, YELLOW); // SAG UST

  		  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawHollowCircle(80,180, 40, NAVY);  // SOL ALT
  		  // Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 160, 280, 200, ORANGE); // SAG ALT
}

void  dorduncubolge(){
	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);
   	// Hollow Circle (Centre X, Centre Y, Radius, Color)
   	ILI9341_DrawFilledCircle(80, 120, 40, BLUE);  // SOL UST
 	// Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawFilledRectangleCoord(200, 100, 280,140, YELLOW); // SAG UST

   	HAL_Delay(100);

  	while(1){
  		touchX = getX();
  		touchY = getY();

 		if(touchX>160 && touchX != 0){
			ILI9341_DrawText("Dogru", FONT4, 130, 120, BLACK, WHITE);
 			HAL_Delay(150);
			score+=1;
			break;
		}
		if(touchX<160 && touchX != 0){
		    ILI9341_DrawText("Yanlis", FONT4, 130, 120, BLACK, WHITE);
		    HAL_Delay(150);
	        break;
		}

  	}

  	ILI9341_FillScreen(RED);
  	// Horizontal Line (X, Y, Length, Color)
  	ILI9341_DrawHLine(0, 120, 320, WHITE);
  	// Vertical Line (X, Y, Length, Color)
  	ILI9341_DrawVLine(160, 0, 240, WHITE);

  	// Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawFilledCircle(80, 60, 40, BLUE);  // SOL UST

  	// Hollow Rectangle (Start X, Start Y, End X, End Y)
  	ILI9341_DrawFilledRectangleCoord(200, 40, 280, 80, YELLOW); // SAG UST

  		  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  	ILI9341_DrawHollowCircle(80,180, 40, NAVY);  // SOL ALT
  		  // Hollow Rectangle (Start X, Start Y, End X, End Y)
   	ILI9341_DrawHollowRectangleCoord(200, 160, 280, 200, ORANGE); // SAG ALT
}
/* USER CODE END 0 */





/* USER CODE BEGIN 2 */
  ILI9341_Init();
  XPT2046_Init();


  char buf[20],buf2[20];

  // Simple Text writing (Text, Font, X, Y, Color, BackColor)
  // Available Fonts are FONT1, FONT2, FONT3 and FONT4
  ILI9341_FillScreen(WHITE);
  ILI9341_SetRotation(SCREEN_HORIZONTAL_2);
  ILI9341_DrawText("ESLESTIRME OYUNU", FONT4, 60, 110, BLACK, WHITE);
  HAL_Delay(1000);

  ILI9341_FillScreen(RED);
  // Horizontal Line (X, Y, Length, Color)
  ILI9341_DrawHLine(0, 120, 320, WHITE);
  // Vertical Line (X, Y, Length, Color)
  ILI9341_DrawVLine(160, 0, 240, WHITE);

  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  ILI9341_DrawFilledCircle(80, 60, 40, BLUE);  // SOL UST
  // Hollow Rectangle (Start X, Start Y, End X, End Y)
  ILI9341_DrawFilledRectangleCoord(200, 40, 280, 80, YELLOW); // SAG UST

  // Hollow Circle (Centre X, Centre Y, Radius, Color)
  ILI9341_DrawHollowCircle(80,180, 40, NAVY);  // SOL ALT
  // Hollow Rectangle (Start X, Start Y, End X, End Y)
  ILI9341_DrawHollowRectangleCoord(200, 160, 280, 200, ORANGE); // SAG ALT

  /* USER CODE END 2 */






  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  touchX = getX();
	  touchY = getY();

	  sprintf(buf,"x=%3d y=%3d", touchX,touchY);
	  sprintf(buf2,"score=%3d", score);

	  ILI9341_DrawText(buf, FONT4, 10, 10, BLACK, WHITE);
	  ILI9341_DrawText(buf2, FONT4, 200, 10, BLACK, WHITE);
	  HAL_Delay(10);

	  if(touchX<160 && touchX>0 && touchY<120 && touchY>0){
		  ILI9341_DrawText("sol ust", FONT4, 130, 120, BLACK, WHITE);
		  birincibolge();
		  touchX = 0;
		  touchY = 0;
	  }
	  if(touchX<320 && touchX>160 && touchY<120 && touchY>0){
	  	  ILI9341_DrawText("sag ust", FONT4, 130, 120, BLACK, WHITE);
	  	  ikincibolge();
		  touchX = 0;
		  touchY = 0;
	  }
	  if(touchX<160 && touchX>0 && touchY<240 && touchY>120){
	  	  ILI9341_DrawText("sol alt", FONT4, 130, 120, BLACK, WHITE);
	  	  ucuncubolge();
		  touchX = 0;
		  touchY = 0;
	  }
	  if(touchX<320 && touchX>160 && touchY<240 && touchY>120){
		  ILI9341_DrawText("sag alt", FONT4, 130, 120, BLACK, WHITE);
		  dorduncubolge();
		  touchX = 0;
		  touchY = 0;
	  }
	  else{
		  while(0);
	  }

  }

  /* USER CODE END 3 */
}
